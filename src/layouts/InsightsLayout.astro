---
import '../assets/css/globals.css'
import Footer from '@/components/base/Footer.astro'
import Navbar from '@/components/base/Navbar.astro'
import type { MarkdownLayoutProps } from 'astro'
import { Temporal } from 'temporal-polyfill'
import { Head } from 'astro-capo'
import { Font } from 'astro:assets'
import { Dot } from '@lucide/astro'
import type { StringSchema } from 'node_modules/astro/dist/env/schema'

type Props = MarkdownLayoutProps<{
  title: string
  author: string
  date: StringSchema
  minutesRead: string
}>

const { frontmatter, url } = Astro.props as unknown as {
  frontmatter: { title: string; author: string; date: string | Date }
  url?: string
}

let dateObj: Temporal.ZonedDateTime

if (typeof frontmatter.date === 'string') {
  const parsed = new Date(frontmatter.date)
  if (isNaN(parsed.getTime())) {
    throw new Error(`Invalid date format: ${frontmatter.date}`)
  }
  dateObj = Temporal.ZonedDateTime.from({
    year: parsed.getFullYear(),
    month: parsed.getMonth() + 1,
    day: parsed.getDate(),
    timeZone: 'Asia/Manila',
  })
} else {
  dateObj = Temporal.ZonedDateTime.from({
    year: frontmatter.date.getFullYear(),
    month: frontmatter.date.getMonth() + 1,
    day: frontmatter.date.getDate(),
    timeZone: 'Asia/Manila',
  })
}

// Format manually using Intl.DateTimeFormat
const formattedDate = new Intl.DateTimeFormat('en-PH', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  timeZone: 'Asia/Manila',
}).format(new Date(dateObj.epochMilliseconds))

const { minutesRead } = Astro.props.frontmatter
---

<!doctype html>
<html lang="en">
  <Head>
    <meta charset="UTF-8" />
    <!-- <meta name="description" content={description} /> -->
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <Font cssVariable="--font-khand" preload />
    <Font cssVariable="--font-supreme" preload />
    <link rel="canonical" href={Astro.site ? new URL(url ?? '/', Astro.site).pathname : (url ?? '/')} />
    <title>{frontmatter.title}</title>
    <script is:inline type="module">
      if (!('anchorName' in document.documentElement.style)) {
        import('https://unpkg.com/@oddbird/css-anchor-positioning')
      }
    </script>
  </Head>
  <body class="w-full flex flex-col justify-start p-4 max-w-xl mx-auto gap-6">
    <Navbar />
    <main
      class="flex-auto prose dark:prose-invert
  prose-h1:font-semibold prose-h2:font-semibold prose-headings:h1 prose-headings:h2 prose-h1:text-primary prose-h2:text-secondary-foreground prose-h2:scroll-m-20 prose-h2:pb-2 prose-h2:tracking-tight prose-h2:first:mt-0"
    >
      <h1>{frontmatter.title}</h1>
      <div class="flex items-center text-muted-foreground text-sm">
        <time datetime={dateObj.toPlainDate().toString()}>
          {formattedDate}
        </time>
        <Dot />
        <span>{minutesRead}</span>
      </div>
      <slot />
    </main>
    <Footer />
  </body>
</html>
